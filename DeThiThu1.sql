--Câu 1 (1.5 điểm): Tạo cơ sở dữ liệu QLVT gồm 3 bảng.
CREATE DATABASE QLVT
--VATTU (MaVT, TenVT, DVTinh,NgayTao,DonGia)
IF OBJECT_ID('VATTU') IS NOT NULL
DROP TABLE VATTU
GO 
CREATE TABLE VATTU(
	MaVT VARCHAR(20) NOT NULL,
	TenVT NVARCHAR(20) NULL,
	DVTinh NVARCHAR(20) NULL,
	NgayTao DATE NULL,
	DonGia MONEY NULL,
	CONSTRAINT PK_VATTU PRIMARY KEY (MaVT)
)
--PHIEUXUAT (SoPX, NgayXuat)
IF OBJECT_ID('PHIEUXUAT') IS NOT NULL
DROP TABLE PHIEUXUAT
GO 
CREATE TABLE PHIEUXUAT(
	SoPX VARCHAR(20) NOT NULL,
	NgayXuat DATE NULL,
	CONSTRAINT PK_PHIEUXUAT PRIMARY KEY (SoPX)
)
--CTPXUAT(SoPX, MaVT, SLXuat, DonGia,TrangThai)
IF OBJECT_ID('CTPXUAT') IS NOT NULL
DROP TABLE CTPXUAT
GO
CREATE TABLE CTPXUAT(
	SoPX VARCHAR(20) NOT  NULL,
	MaVT VARCHAR(20) NOT NULL,
	SLXuat INT NULL,
	DonGia MONEY NULL,
	TrangThai NVARCHAR(20) NULL,
	CONSTRAINT PK_CTPXUAT PRIMARY KEY (SoPX,MaVT),
	CONSTRAINT FK_CTPXUAT_PHIEUXUAT FOREIGN KEY (SoPX) REFERENCES PHIEUXUAT,
	CONSTRAINT FK_CTPXUAT_VATTU FOREIGN KEY (MaVT) REFERENCES VATTU
)
--Câu 2 (3 điểm): Chèn thông tin vào các bảng
--Tạo Stored Procedure (SP) với các tham số đầu vào phù hợp.
--SP thứ nhất thực hiện chèn dữ liệu vào bảng VATTU.
--SP thứ hai thực hiện chèn dữ liệu vào bảng PHIEUXUAT.
--SP thứ ba thực hiện chèn dữ liệu vào bảng CTPXUAT.
--Yêu cầu mỗi SP phải kiểm tra tham số đầu vào. Với các cột không chấp nhận thuộc tính Null.
--Với mỗi SP viết 3 lời gọi thành công.
IF OBJECT_ID('SP_VATTU') IS NOT NULL
DROP PROC SP_VATTU
 GO
 CREATE PROC SP_VATTU
	@MaVT VARCHAR(20) ,
	@TenVT NVARCHAR(20) ,
	@DVTinh NVARCHAR(20) ,
	@NgayTao DATE ,
	@DonGia MONEY 
AS IF @MaVT IS NULL OR @TenVT IS NULL OR @DVTinh IS NULL OR @NgayTao IS NULL OR @DonGia IS NULL
PRINT N'NHẬP THÀNH CÔNG'
INSERT VATTU VALUES (@MaVT,@TenVT,@DVTinh,@NgayTao,@DonGia)
EXEC SP_VATTU '001', N'CÁT', N'KHỐI', '05/08/2021', 200000
EXEC SP_VATTU '002', N'ĐÁ', N'KHỐI', '01/08/2021', 300000
EXEC SP_VATTU '003', N'XI MĂNG', N'TẤN', '12/17/2021', 2000000
SELECT * FROM VATTU
----
IF OBJECT_ID('SP_PHIEUXUAT') IS NOT NULL
DROP PROC SP_PHIEUXUAT
GO
CREATE PROC SP_PHIEUXUAT
@SoPX VARCHAR(20) ,
	@NgayXuat DATE
AS IF @SoPX IS NULL OR @NgayXuat IS NULL
PRINT N'NHẬP THÀNH CÔNG'
INSERT PHIEUXUAT VALUES (@SoPX,@NgayXuat)
EXEC SP_PHIEUXUAT 'PX001', '6/18/2022'
EXEC SP_PHIEUXUAT 'PX002', '6/16/2022'
EXEC SP_PHIEUXUAT 'PX003', '6/10/2022'
SELECT * FROM PHIEUXUAT
----
IF OBJECT_ID('SP_CTPXUAT') IS NOT NULL
DROP PROC SP_CTPXUAT
GO 
CREATE PROC SP_CTPXUAT
@SoPX VARCHAR(20) ,
	@MaVT VARCHAR(20)  ,
	@SLXuat INT ,
	@DonGia MONEY ,
	@TrangThai NVARCHAR(20)
AS IF @SoPX IS NULL OR @MaVT IS NULL OR @SLXuat IS NULL OR @DonGia IS NULL OR @TrangThai IS NULL 
PRINT N'NHẬP THÀNH CÔNG'
INSERT CTPXUAT VALUES (@SoPX,@MaVT,@SLXuat,@DonGia,@TrangThai)
EXEC SP_CTPXUAT 'PX001','002', 2, 300000, N'ĐÃ THANH TOÁN'
EXEC SP_CTPXUAT 'PX002','003', 3, 200000, N'ĐÃ THANH TOÁN'
EXEC SP_CTPXUAT 'PX003','001', 5, 1000000, N'ĐÃ THANH TOÁN'
SELECT * FROM CTPXUAT

--Câu 3 (2 điểm): Viết Hàm
--Viết hàm các tham số đầu vào tương ứng với các cột của bảng VATTU. Hàm này trả về MaVT thỏa mãn các giá trị được truyền tham số.
IF OBJECT_ID('FUNC_VATTU') IS NOT NULL
DROP FUNCTION FUNC_VATTU
GO
CREATE FUNCTION FUNC_VATTU(
@MaVT VARCHAR(20) ,
	@TenVT NVARCHAR(20) ,
	@DVTinh NVARCHAR(20) ,
	@NgayTao DATE ,
	@DonGia MONEY 
)
RETURNS VARCHAR(20) 
BEGIN 
RETURN (SELECT MaVT FROM VATTU WHERE @MaVT=MaVT AND @TenVT=TenVT AND @DVTinh=DVTinh AND @NgayTao=NgayTao AND @DonGia=DonGia)
END
DECLARE @MaVT VARCHAR(20) 
SET @MaVT = DBO.FUNC_VATTU('001', N'CÁT', N'KHỐI', '05/08/2021', 200000)
SELECT @MaVT AS MaVT
--Câu 4 (1.5 điểm): Tạo View 
--Tạo View lưu thông tin của phiếu xuất có giá trị lớn nhất, gồm các thông tin sau: MaVT, TenVT, NgayXuat, TenKH, SLXuat, DonGia, “Gia Tri Max” và sắp xếp giảm dần.
GO 
ALTER VIEW VIEW_PHIEUXUATMAX
AS 
SELECT TOP 2 VATTU.MaVT,VATTU.TenVT, PHIEUXUAT.NgayXuat,CTPXuat.SLXuat,CTPXuat.DonGia, SUM(CTPXuat.SLXuat*CTPXuat.DonGia) AS GIATRIMAX
FROM VATTU JOIN CTPXUAT ON VATTU.MaVT = CTPXUAT.MaVT
		 JOIN PHIEUXUAT ON CTPXUAT.SoPX = PHIEUXUAT.SoPX
		
GROUP BY VATTU.MaVT,VATTU.TenVT, PHIEUXUAT.NgayXuat,CTPXuat.SLXuat,CTPXuat.DonGia
 ORDER BY GIATRIMAX DESC
--ORDER BY GIATRIMAX DESC--SUM(CTPXuat.DonGia) AS GIATRIMAX
SELECT * FROM VIEW_PHIEUXUATMAX
SELECT * FROM VATTU
SELECT * FROM PHIEUXUAT
SELECT * FROM CTPXUAT
---
IF OBJECT_ID('VIEW_PHIEUXUAT') IS NOT NULL
DROP VIEW VIEW_PHIEUXUAT
GO 
CREATE VIEW VIEW_PHIEUXUAT
AS 
SELECT TOP 5 
VATTU.MaVT,TenVT, NgayXuat,SLXuat,CTPXuat.DonGia,(SLXuat*CTPXuat.DonGia) AS N'GIÁ TRỊ MAX'
FROM VATTU INNER JOIN CTPXUAT ON VATTU.MaVT = CTPXUAT.MaVT
		INNER JOIN PHIEUXUAT ON VATTU.MaVT = PHIEUXUAT.SoPX
SELECT * FROM VIEW_PHIEUXUAT

--Câu 5 (2 điểm): Viết thủ tục
--Viết một SP nhận một tham số đầu vào là SLXuat. SP này thực hiện thao tác xóa thông tin vật tư và phiếu xuất tương ứng.
--Yêu cầu: Sử dụng giao dịch trong thân SP, để đảm bảo tính toàn vẹn dữ liệu khi một thao tác xóa thực hiện không thành công.
IF OBJECT_ID ('SP_SLXuat') IS NOT NULL
DROP PROC SP_SLXuat
GO 
CREATE PROC SP_SLXuat @SLXuat INT
AS
BEGIN TRY
	BEGIN TRAN
	DELETE FROM CTPXUAT WHERE SLXuat=@SLXuat
	
	PRINT N'XÓA THÀNH CÔNG'
	COMMIT TRAN
END TRY
BEGIN CATCH
PRINT N'XÓA KHÔNG THÀNH CÔNG'
ROLLBACK TRAN
END CATCH 
EXEC DBO.SP_SLXuat 5
SELECT * FROM CTPXUAT
